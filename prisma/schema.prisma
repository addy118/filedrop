generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id        Int      @id @default(autoincrement())
  uname     String   @unique @db.VarChar(255)
  pass      String   @db.Char(60)
  createdAt DateTime @default(now())
  folders   Folder[]
  files     File[]
}

model Folder {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(255)
  parentFolder Folder?  @relation("ParentChild", fields: [parentId], references: [id], onDelete: Cascade)
  parentId     Int?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  subFolders   Folder[] @relation("ParentChild")
  files        File[]
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  url          String?

  @@unique([name, parentId, userId])
}

model File {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  folder    Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId  Int
  size      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  url       String?

  @@unique([name, folderId, userId])
}
